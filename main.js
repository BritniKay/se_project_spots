(()=>{"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};function t(e){return document.querySelector(`#${e.id}-error`)}function r(e,r,o){const n=t(r);n&&(r.classList.remove(o.inputErrorClass),n.classList.remove(o.errorClass),n.textContent="",n.removeAttribute("aria-live"))}function o(e,o,n){o.validity.valid?r(0,o,n):function(e,r,o,n){const s=t(r);s?(r.classList.add(n.inputErrorClass),s.textContent=o,s.classList.add(n.errorClass),s.setAttribute("aria-live","assertive")):console.error(`Error: No error element found for ${r.id}`)}(0,o,o.validationMessage,n)}const n=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}_checkResponse(e){return e.ok?e.json():e.json().then((t=>{throw new Error(`Error ${e.status}: ${t.message||e.statusText}`)}))}_handleError(e){return console.error("API Request Failed:",e),Promise.reject(e)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._checkResponse).catch(this._handleError)}updateUserInfo(e){let{name:t,about:r}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})}).then(this._checkResponse).catch((e=>console.error("Error updating profile:",e)))}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkResponse).catch(this._handleError)}addNewCard(e){let{name:t,link:r}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})}).then(this._checkResponse).catch((e=>console.error("Error adding new card:",e)))}removeCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse).catch((e=>console.error("Error deleting card:",e)))}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._checkResponse).catch((e=>console.error("Error liking card:",e)))}unlikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._checkResponse).catch((e=>console.error("Error unliking card:",e)))}getAppData(){return Promise.all([this.getUserInfo(),this.getInitialCards()]).then((e=>{let[t,r]=e;return t&&"Placeholder name"!==t.name||console.warn("Warning: API is returning placeholder data!"),{userData:t,cards:r}})).catch(this._handleError)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"402df489-8b33-4cc5-a119-272d843e9751","Content-Type":"application/json"}}),s=document.querySelector(".profile__name-first"),a=document.querySelector(".profile__description-first"),c=document.querySelector(".profile__avatar"),l=document.querySelector("#profile-name-input"),i=document.querySelector("#profile-description-input"),d=document.querySelector(".profile__edit-btn"),u=document.querySelector("#edit-modal"),m=document.forms["profile-form"],h=document.querySelector(".cards__list"),f=document.querySelector("#card-template").content,_=document.querySelector("#add-card-modal"),p=document.forms["add-card-form"],E=document.querySelector("#profile-image-link"),v=document.querySelector("#profile-caption-input"),y=document.querySelector(".profile__add-btn"),b=document.querySelector("#delete-card-modal"),S=document.querySelector("#confirm-delete-btn"),g=(document.querySelector("#delete-pic-modal"),document.querySelector("#confirm-delete-pic-btn")),C=document.querySelectorAll(".modal__close-btn");let k=null;function q(e){if(!e.name||!e.link)return;const t=function(e){const t=f.cloneNode(!0).firstElementChild,r=t.querySelector(".card__title"),o=t.querySelector(".card__img"),n=t.querySelector(".card__delete-button");return r.textContent=e.name,o.src=e.link,o.alt=e.name,n.addEventListener("click",(()=>function(e,t){b?(k={element:e,id:t},A(b)):console.error("Error: Delete card modal not found!")}(t,e._id))),t}(e);h.prepend(t)}function A(e){e.classList.add("modal_opened"),document.addEventListener("keydown",P)}function L(e){e.classList.remove("modal_opened"),document.removeEventListener("keydown",P)}function P(e){if("Escape"===e.key){const e=document.querySelector(".modal_opened");e&&L(e)}}var U;console.log("Profile Name Before API:",s?.textContent),console.log("Profile Description Before API:",a?.textContent),console.log("Profile Avatar Before API:",c?.src),n.getAppData().then((e=>{let{userData:t,cards:r}=e;console.log("API User Data:",t),console.log("API Cards Data:",r),t&&"Placeholder name"!==t.name?(s.textContent=t.name,a.textContent=t.about,c.src=t.avatar,c.alt=`Avatar of ${t.name||"User"}`):console.warn("Warning: API returned placeholder data. Profile not updated."),function(e){e.forEach(q)}(r)})).catch(console.error),S.addEventListener("click",(()=>{k&&n.deleteCard(k.id).then((()=>{k.element.remove(),L(b)})).catch(console.error)})),g.addEventListener("click",(()=>{})),C.forEach((e=>{const t=e.closest(".modal");e.addEventListener("click",(()=>L(t)))})),d.addEventListener("click",(()=>{!function(e,t){if(!e)return void console.error("Error: resetForm called with undefined formElement.");e.reset();const o=Array.from(e.querySelectorAll(t.inputSelector)),n=e.querySelector(t.submitButtonSelector);o.forEach((e=>r(0,e,t))),n?(n.classList.add(t.inactiveButtonClass),n.disabled=!0):console.error("Error: buttonElement not found during form reset.")}(m,e),l.value=s.textContent.trim(),i.value=a.textContent.trim(),A(u)})),m.addEventListener("submit",(e=>{e.preventDefault();const t=l.value.trim(),r=i.value.trim();n.updateUserInfo({name:t,about:r}).then((e=>{s.textContent=e.name,a.textContent=e.about,L(u)})).catch(console.error)})),p.addEventListener("submit",(e=>{e.preventDefault();const t=v.value.trim(),r=E.value.trim();n.addNewCard({name:t,link:r}).then((e=>{q(e),p.reset(),L(_)})).catch(console.error)})),y.addEventListener("click",(()=>A(_))),U=e,Array.from(document.querySelectorAll(U.formSelector)).forEach((e=>{(function(e,t){if(!e)return void console.error("Error: formElement is undefined, cannot set event listeners.");const r=Array.from(e.querySelectorAll(t.inputSelector)),n=e.querySelector(t.submitButtonSelector);r.forEach((e=>{e.addEventListener("input",function(e){let t,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:300;return function(){for(var o=arguments.length,n=new Array(o),s=0;s<o;s++)n[s]=arguments[s];clearTimeout(t),t=setTimeout((()=>e(...n)),r)}}((()=>{o(0,e,t),function(e,t,r){const o=e.some((e=>!e.validity.valid));t?(t.classList.toggle(r.inactiveButtonClass,o),t.disabled=o):console.error("Error: buttonElement is undefined, cannot toggle button state.")}(r,n,t)})))}))})(e,U),e.addEventListener("submit",(t=>{t.preventDefault(),function(e,t){e?Array.from(e.querySelectorAll(t.inputSelector)).forEach((e=>o(0,e,t))):console.error("Error: displayErrorsOnSubmit called with undefined formElement.")}(e,U),e.checkValidity()&&console.log("Form submitted successfully!")}))}))})();
//# sourceMappingURL=main.js.map