{"version":3,"file":"main.js","mappings":"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","sources":["webpack://se_project_spots/./src/utils/Api.js","webpack://se_project_spots/./src/scripts/validation.js","webpack://se_project_spots/./src/pages/index.js"],"sourcesContent":["class Api {\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return res.json().then((err) => {\n      throw new Error(`Error ${res.status}: ${err.message || res.statusText}`);\n    });\n  }\n\n  _handleError(error) {\n    console.error(\"API Request Failed:\", error);\n    return Promise.reject(error);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, { headers: this._headers })\n      .then(this._checkResponse)\n      .catch(this._handleError);\n  }\n\n  updateUserInfo({ name, about }) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({ name, about }),\n    })\n      .then(this._checkResponse)\n      .catch((error) => console.error(\"Error updating profile:\", error));\n  }\n\n  updateProfileAvatar(avatarUrl) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({ avatar: avatarUrl }),\n    })\n      .then(this._checkResponse)\n      .then(() => this.getUserInfo()) // Fetch latest user data\n      .catch(console.error);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, { headers: this._headers })\n      .then(this._checkResponse)\n      .catch(this._handleError);\n  }\n\n  addNewCard({ name, link }) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({ name, link }),\n    })\n      .then(this._checkResponse)\n      .catch((error) => console.error(\"Error adding new card:\", error));\n  }\n\n  removeCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    })\n      .then(this._checkResponse)\n      .catch((error) => console.error(\"Error deleting card:\", error));\n  }\n\n  likeCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: this._headers,\n    })\n      .then(this._checkResponse)\n      .catch((error) => console.error(\"Error liking card:\", error));\n  }\n\n  unlikeCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    })\n      .then(this._checkResponse)\n      .catch((error) => console.error(\"Error unliking card:\", error));\n  }\n\n  getAppData() {\n    return Promise.all([this.getUserInfo(), this.getInitialCards()])\n      .then(([userData, cards]) => {\n        if (!userData || userData.name === \"Placeholder name\") {\n          console.warn(\"Warning: API is returning placeholder data!\");\n        }\n        return { userData, cards };\n      })\n      .catch(this._handleError);\n  }\n}\n\nexport default Api;\n","export const settings = {\r\n  formSelector: \".modal__form\",\r\n  inputSelector: \".modal__input\",\r\n  submitButtonSelector: \".modal__submit-btn\",\r\n  inactiveButtonClass: \"modal__submit-btn_disabled\",\r\n  inputErrorClass: \"modal__input_type_error\",\r\n  errorClass: \"modal__error_visible\",\r\n};\r\n\r\n// Define validation configuration separately\r\nexport const validationconfig = {\r\n  allowEmptyFields: false,\r\n  validateOnBlur: true,\r\n  errorMessages: {\r\n    required: \"This field is required.\",\r\n    invalidFormat: \"Invalid format.\",\r\n  },\r\n};\r\n\r\nexport function getErrorElement(inputElement) {\r\n  return document.querySelector(`#${inputElement.id}-error`);\r\n}\r\n\r\nexport function showInputError(\r\n  formElement,\r\n  inputElement,\r\n  errorMessage,\r\n  config\r\n) {\r\n  const errorElement = getErrorElement(inputElement);\r\n  if (!errorElement) {\r\n    console.error(`Error: No error element found for ${inputElement.id}`);\r\n    return;\r\n  }\r\n  inputElement.classList.add(config.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(config.errorClass);\r\n  errorElement.setAttribute(\"aria-live\", \"assertive\");\r\n}\r\n\r\nexport function hideInputError(formElement, inputElement, config) {\r\n  const errorElement = getErrorElement(inputElement);\r\n  if (!errorElement) return;\r\n  inputElement.classList.remove(config.inputErrorClass);\r\n  errorElement.classList.remove(config.errorClass);\r\n  errorElement.textContent = \"\";\r\n  errorElement.removeAttribute(\"aria-live\");\r\n}\r\n\r\nexport function checkInputValidity(formElement, inputElement, config) {\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(\r\n      formElement,\r\n      inputElement,\r\n      inputElement.validationMessage,\r\n      config\r\n    );\r\n  } else {\r\n    hideInputError(formElement, inputElement, config);\r\n  }\r\n}\r\n\r\nexport function debounce(func, delay = 300) {\r\n  let timeout;\r\n  return (...args) => {\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(() => func(...args), delay);\r\n  };\r\n}\r\n\r\nexport function setEventListeners(formElement, config) {\r\n  if (!formElement) {\r\n    console.error(\r\n      \"Error: formElement is undefined, cannot set event listeners.\"\r\n    );\r\n    return;\r\n  }\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(config.inputSelector)\r\n  );\r\n  const buttonElement = formElement.querySelector(config.submitButtonSelector);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener(\r\n      \"input\",\r\n      debounce(() => {\r\n        checkInputValidity(formElement, inputElement, config);\r\n        toggleButtonState(inputList, buttonElement, config);\r\n      })\r\n    );\r\n  });\r\n}\r\n\r\nexport function toggleButtonState(inputList, buttonElement, config) {\r\n  const isFormInvalid = inputList.some((input) => !input.validity.valid);\r\n  if (!buttonElement) {\r\n    console.error(\r\n      \"Error: buttonElement is undefined, cannot toggle button state.\"\r\n    );\r\n    return;\r\n  }\r\n  buttonElement.classList.toggle(config.inactiveButtonClass, isFormInvalid);\r\n  buttonElement.disabled = isFormInvalid;\r\n}\r\n\r\nexport function resetForm(formElement, config) {\r\n  if (!formElement) {\r\n    console.error(\"Error: resetForm called with undefined formElement.\");\r\n    return;\r\n  }\r\n  formElement.reset();\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(config.inputSelector)\r\n  );\r\n  const buttonElement = formElement.querySelector(config.submitButtonSelector);\r\n\r\n  inputList.forEach((inputElement) =>\r\n    hideInputError(formElement, inputElement, config)\r\n  );\r\n  if (buttonElement) {\r\n    buttonElement.classList.add(config.inactiveButtonClass);\r\n    buttonElement.disabled = true;\r\n  } else {\r\n    console.error(\"Error: buttonElement not found during form reset.\");\r\n  }\r\n}\r\n\r\nexport function displayErrorsOnSubmit(formElement, config) {\r\n  if (!formElement) {\r\n    console.error(\r\n      \"Error: displayErrorsOnSubmit called with undefined formElement.\"\r\n    );\r\n    return;\r\n  }\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(config.inputSelector)\r\n  );\r\n  inputList.forEach((inputElement) =>\r\n    checkInputValidity(formElement, inputElement, config)\r\n  );\r\n}\r\n\r\nexport function enableValidation(config) {\r\n  const formList = Array.from(document.querySelectorAll(config.formSelector));\r\n  formList.forEach((formElement) => {\r\n    setEventListeners(formElement, config);\r\n    formElement.addEventListener(\"submit\", (event) => {\r\n      event.preventDefault();\r\n      displayErrorsOnSubmit(formElement, config);\r\n      if (formElement.checkValidity()) {\r\n        console.log(\"Form submitted successfully!\");\r\n      }\r\n    });\r\n  });\r\n}\r\n","import \"./index.css\";\r\nimport \"../vendor/normalize.css\";\r\nimport Api from \"../utils/Api.js\";\r\nimport {\r\n  enableValidation,\r\n  settings,\r\n  resetForm,\r\n} from \"../scripts/validation.js\";\r\n\r\nconst api = new Api({\r\n  baseUrl: \"https://around-api.en.tripleten-services.com/v1\",\r\n  headers: {\r\n    authorization: \"402df489-8b33-4cc5-a119-272d843e9751\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\napi.getInitialCards().then((cards) => {\r\n  console.log(cards);\r\n});\r\n\r\n/*\r\nconst initialCards = [\r\n  { name: \"Val Thorens\", link: \"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/spots/1-photo-by-moritz-feldmann-from-pexels.jpg\" },\r\n  { name: \"Restaurant terrace\", link: \"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/spots/2-photo-by-ceiline-from-pexels.jpg\" },\r\n  { name: \"An outdoor cafe\", link: \"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/spots/3-photo-by-tubanur-dogan-from-pexels.jpg\" },\r\n  { name: \"A very long bridge, over the forest and through the trees\", link: \"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/spots/4-photo-by-maurice-laschet-from-pexels.jpg\" },\r\n  { name: \"Tunnel with morning light\", link: \"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/spots/5-photo-by-van-anh-nguyen-from-pexels.jpg\" },\r\n  { name: \"Mountain house\", link: \"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/spots/6-photo-by-moritz-feldmann-from-pexels.jpg\" },\r\n];\r\n*/\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n  const profileName = document.querySelector(\".profile__name-first\");\r\n  const profileDescription = document.querySelector(\r\n    \".profile__description-first\"\r\n  );\r\n  const profileAvatar = document.querySelector(\".profile__avatar\");\r\n  const profileAvatarEditButton = document.querySelector(\r\n    \".profile__avatar-edit\"\r\n  );\r\n\r\n  const inputProfileName = document.querySelector(\"#profile-name-input\");\r\n  const inputProfileDescription = document.querySelector(\r\n    \"#profile-description-input\"\r\n  );\r\n  const profileEditButton = document.querySelector(\".profile__edit-btn\");\r\n  const profileEditModal = document.querySelector(\"#edit-modal\");\r\n  const profileForm = document.forms[\"profile-form\"];\r\n  const editAvatarModal = document.querySelector(\"#edit-avatar-modal\");\r\n  const avatarForm = document.forms[\"edit-avatar-form\"];\r\n  const inputAvatarUrl = document.querySelector(\"#avatar-url-input\");\r\n  const cardsContainer = document.querySelector(\".cards__list\");\r\n  const cardTemplate = document.querySelector(\"#card-template\").content;\r\n  const addCardModal = document.querySelector(\"#add-card-modal\");\r\n  const addCardForm = document.forms[\"add-card-form\"];\r\n  const inputCardImageLink = document.querySelector(\"#profile-image-link\");\r\n  const inputCardCaption = document.querySelector(\"#profile-caption-input\");\r\n  const openAddCardModalButton = document.querySelector(\".profile__add-btn\");\r\n  const deleteCardModal = document.querySelector(\"#delete-card-modal\");\r\n  const confirmDeleteButton = document.querySelector(\"#confirm-delete-btn\");\r\n  const closeModalButtons = document.querySelectorAll(\".modal__close-btn\");\r\n  const closeDeleteModalButton = document.querySelector(\r\n    \".modal__close-btn-delete\"\r\n  );\r\n  const cancelDeleteButton = document.querySelector(\".modal__cancel-delete\");\r\n  const previewImageModal = document.querySelector(\"#preview-modal\");\r\n  const previewImage = previewImageModal?.querySelector(\r\n    \".modal__image_preview\"\r\n  );\r\n  const previewCaption = previewImageModal?.querySelector(\".modal__caption\");\r\n\r\n  let cardToDelete = null;\r\n\r\n  function openModal(modal) {\r\n    if (!modal) return;\r\n    modal.classList.add(\"modal_opened\");\r\n    document.addEventListener(\"keydown\", handleEscapeKey);\r\n  }\r\n\r\n  function closeModal(modal) {\r\n    if (!modal) return;\r\n    modal.classList.remove(\"modal_opened\");\r\n    document.removeEventListener(\"keydown\", handleEscapeKey);\r\n  }\r\n\r\n  function handleEscapeKey(event) {\r\n    if (event.key === \"Escape\") {\r\n      const openModal = document.querySelector(\".modal_opened\");\r\n      if (openModal) closeModal(openModal);\r\n    }\r\n  }\r\n\r\n  closeModalButtons.forEach((button) => {\r\n    const modal = button.closest(\".modal\");\r\n    button.addEventListener(\"click\", () => closeModal(modal));\r\n  });\r\n\r\n  if (closeDeleteModalButton) {\r\n    closeDeleteModalButton.addEventListener(\"click\", () => {\r\n      console.log(\"Close (X) button clicked in delete modal!\");\r\n      closeModal(deleteCardModal);\r\n    });\r\n  }\r\n\r\n  if (cancelDeleteButton) {\r\n    cancelDeleteButton.addEventListener(\"click\", () => {\r\n      console.log(\"Cancel button clicked in delete modal!\");\r\n      closeModal(deleteCardModal);\r\n    });\r\n  }\r\n\r\n  api\r\n    .getUserInfo()\r\n    .then((userData) => {\r\n      console.log(\"API Response:\", userData);\r\n      profileName.textContent = userData.name || \"Bessie Coleman\";\r\n      profileDescription.textContent = userData.about || \"Civil Aviator\";\r\n      profileAvatar.src = userData.avatar.includes(\"placeholder\")\r\n        ? \"./images/avatar.jpg\"\r\n        : userData.avatar;\r\n    })\r\n    .catch(console.error);\r\n\r\n  api\r\n    .getInitialCards()\r\n    .then((cards) => {\r\n      console.log(\"Loaded Cards:\", cards);\r\n      renderInitialCards(cards);\r\n    })\r\n    .catch(console.error);\r\n\r\n  function renderInitialCards(cards) {\r\n    cards.forEach(renderCard);\r\n  }\r\n\r\n  function renderCard(data, method = \"prepend\") {\r\n    if (!data.name || !data.link) return;\r\n    const cardElement = createCardElement(data);\r\n    method === \"prepend\"\r\n      ? cardsContainer.prepend(cardElement)\r\n      : cardsContainer.append(cardElement);\r\n  }\r\n\r\n  function createCardElement(data) {\r\n    const cardElement = cardTemplate.cloneNode(true).firstElementChild;\r\n    const cardTitle = cardElement.querySelector(\".card__title\");\r\n    const cardImage = cardElement.querySelector(\".card__img\");\r\n    const deleteButton = cardElement.querySelector(\".card__delete-button\");\r\n    const likeButton = cardElement.querySelector(\".card__like-button\");\r\n\r\n    cardTitle.textContent = data.name;\r\n    cardImage.src = data.link;\r\n    cardImage.alt = data.name;\r\n\r\n    deleteButton.addEventListener(\"click\", () => openDeleteModal(cardElement));\r\n    likeButton.addEventListener(\"click\", (event) =>\r\n      event.target.classList.toggle(\"liked\")\r\n    );\r\n\r\n    cardImage.addEventListener(\"click\", () => {\r\n      if (previewImageModal && previewImage && previewCaption) {\r\n        previewImage.src = data.link;\r\n        previewImage.alt = data.name;\r\n        previewCaption.textContent = data.name;\r\n        openModal(previewImageModal);\r\n      }\r\n    });\r\n\r\n    return cardElement;\r\n  }\r\n\r\n  function openDeleteModal(cardElement) {\r\n    if (!deleteCardModal) {\r\n      console.error(\"Delete modal not found!\");\r\n      return;\r\n    }\r\n    cardToDelete = cardElement;\r\n    openModal(deleteCardModal);\r\n  }\r\n\r\n  if (confirmDeleteButton) {\r\n    confirmDeleteButton.addEventListener(\"click\", () => {\r\n      if (!cardToDelete) return;\r\n\r\n      api\r\n        .removeCard(cardToDelete.dataset.cardId)\r\n        .then(() => {\r\n          cardToDelete.remove();\r\n          closeModal(deleteCardModal);\r\n        })\r\n        .catch(console.error);\r\n    });\r\n  }\r\n\r\n  if (profileEditButton) {\r\n    profileEditButton.addEventListener(\"click\", () => {\r\n      resetForm(profileForm, settings);\r\n      inputProfileName.value = profileName?.textContent.trim() || \"\";\r\n      inputProfileDescription.value =\r\n        profileDescription?.textContent.trim() || \"\";\r\n      openModal(profileEditModal);\r\n    });\r\n  }\r\n\r\n  if (profileForm) {\r\n    profileForm.addEventListener(\"submit\", (event) => {\r\n      event.preventDefault();\r\n\r\n      const saveButton = profileForm.querySelector(\".modal__submit-btn\");\r\n      const originalText = saveButton.textContent;\r\n\r\n      saveButton.textContent = \"Saving...\";\r\n      saveButton.disabled = true;\r\n\r\n      api\r\n        .updateUserInfo({\r\n          name: inputProfileName.value.trim(),\r\n          about: inputProfileDescription.value.trim(),\r\n        })\r\n        .then(() => {\r\n          if (profileName && inputProfileName) {\r\n            profileName.textContent = inputProfileName.value.trim();\r\n          }\r\n          if (profileDescription && inputProfileDescription) {\r\n            profileDescription.textContent =\r\n              inputProfileDescription.value.trim();\r\n          }\r\n          closeModal(profileEditModal);\r\n        })\r\n        .catch(console.error)\r\n        .finally(() => {\r\n          saveButton.textContent = originalText;\r\n          saveButton.disabled = false;\r\n        });\r\n    });\r\n  }\r\n\r\n  if (profileAvatarEditButton) {\r\n    profileAvatarEditButton.addEventListener(\"click\", () => {\r\n      resetForm(avatarForm, settings);\r\n      openModal(editAvatarModal);\r\n    });\r\n  }\r\n\r\n  if (avatarForm) {\r\n    avatarForm.addEventListener(\"submit\", (event) => {\r\n      event.preventDefault();\r\n      const newAvatarUrl = inputAvatarUrl?.value.trim();\r\n      if (!newAvatarUrl) return;\r\n      if (profileAvatar) {\r\n        profileAvatar.src = newAvatarUrl;\r\n      }\r\n      closeModal(editAvatarModal);\r\n    });\r\n  }\r\n\r\n  if (openAddCardModalButton) {\r\n    openAddCardModalButton.addEventListener(\"click\", () =>\r\n      openModal(addCardModal)\r\n    );\r\n  }\r\n\r\n  if (addCardForm) {\r\n    addCardForm.addEventListener(\"submit\", (event) => {\r\n      event.preventDefault();\r\n      const newCardData = {\r\n        name: inputCardCaption?.value.trim(),\r\n        link: inputCardImageLink?.value.trim(),\r\n      };\r\n\r\n      if (!newCardData.name || !newCardData.link) return;\r\n\r\n      api\r\n        .addNewCard(newCardData)\r\n        .then((card) => {\r\n          renderCard(card);\r\n          addCardForm.reset();\r\n          closeModal(addCardModal);\r\n        })\r\n        .catch(console.error);\r\n    });\r\n  }\r\n\r\n  enableValidation(settings);\r\n});\r\n"],"names":["settings","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","getErrorElement","inputElement","document","querySelector","id","hideInputError","formElement","config","errorElement","classList","remove","textContent","removeAttribute","checkInputValidity","validity","valid","errorMessage","add","setAttribute","console","error","showInputError","validationMessage","resetForm","reset","inputList","Array","from","querySelectorAll","buttonElement","forEach","disabled","enableValidation","addEventListener","func","timeout","delay","arguments","length","undefined","_len","args","_key","clearTimeout","setTimeout","debounce","isFormInvalid","some","input","toggle","toggleButtonState","setEventListeners","event","preventDefault","displayErrorsOnSubmit","checkValidity","log","api","constructor","_ref","baseUrl","headers","this","_baseUrl","_headers","_checkResponse","res","ok","json","then","err","Error","status","message","statusText","_handleError","Promise","reject","getUserInfo","fetch","catch","updateUserInfo","_ref2","name","about","method","body","JSON","stringify","updateProfileAvatar","avatarUrl","avatar","getInitialCards","addNewCard","_ref3","link","removeCard","cardId","likeCard","unlikeCard","getAppData","all","_ref4","userData","cards","warn","authorization","profileName","profileDescription","profileAvatar","profileAvatarEditButton","inputProfileName","inputProfileDescription","profileEditButton","profileEditModal","profileForm","forms","editAvatarModal","avatarForm","inputAvatarUrl","cardsContainer","cardTemplate","content","addCardModal","addCardForm","inputCardImageLink","inputCardCaption","openAddCardModalButton","deleteCardModal","confirmDeleteButton","closeModalButtons","closeDeleteModalButton","cancelDeleteButton","previewImageModal","previewImage","previewCaption","cardToDelete","openModal","modal","handleEscapeKey","closeModal","removeEventListener","key","renderCard","data","cardElement","cloneNode","firstElementChild","cardTitle","cardImage","deleteButton","likeButton","src","alt","openDeleteModal","target","createCardElement","prepend","append","button","closest","includes","renderInitialCards","dataset","value","trim","saveButton","originalText","finally","newAvatarUrl","newCardData","card"],"sourceRoot":""}